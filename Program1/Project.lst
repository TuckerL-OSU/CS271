Microsoft (R) Macro Assembler Version 14.10.25017.0	    01/20/18 16:41:06
/Elementary Arithmatic     (ElementaryArith.asm		     Page 1 - 1


				TITLE Elementary Arithmatic     (ElementaryArith.asm)

				; Author: Tucker Lavell
				; Course / Project ID: Program #1    Date: 01/17/18
				; Description: This program will take a users input of 2 numbers,
				;	and print out the sum, difference, product, quotient, and remainder

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

				; (insert constant definitions here)

 00000000			.data
				; First Test
				; Introduction
 00000000 45 6C 65 6D 65	prog_name	BYTE "Elementary Arithmatic	", 0
	   6E 74 61 72 79
	   20 41 72 69 74
	   68 6D 61 74 69
	   63 09 00
 00000017 62 79 20 54 75	whoBy		BYTE "by Tucker Lavell", 0
	   63 6B 65 72 20
	   4C 61 76 65 6C
	   6C 00
				; forgot ", 0" at first which was causing prompt_1 to print at the end as well
 00000028 49 6D 70 72 65	goodBye		BYTE "Impressed? Bye!", 0
	   73 73 65 64 3F
	   20 42 79 65 21
	   00

				; Second Test
				; Get input
				; to fit 80 chars
 00000038 45 6E 74 65 72	prompt_1	BYTE "Enter 2 numbers, and I'll show you ", 0
	   20 32 20 6E 75
	   6D 62 65 72 73
	   2C 20 61 6E 64
	   20 49 27 6C 6C
	   20 73 68 6F 77
	   20 79 6F 75 20
	   00
 0000005C 74 68 65 20 73	prompt_1_cont BYTE "the sum, difference, product, quotient, and remainder.", 0
	   75 6D 2C 20 64
	   69 66 66 65 72
	   65 6E 63 65 2C
	   20 70 72 6F 64
	   75 63 74 2C 20
	   71 75 6F 74 69
	   65 6E 74 2C 20
	   61 6E 64 20 72
	   65 6D 61 69 6E
	   64 65 72 2E 00
 00000093 00000000		firstNum	DWORD 0
 00000097 00000000		secondNum	DWORD 0
				; Where input is stored
 0000009B 46 69 72 73 74	first	BYTE "First Number: ", 0
	   20 4E 75 6D 62
	   65 72 3A 20 00
 000000AA 53 65 63 6F 6E	second	BYTE "Second Number: ", 0
	   64 20 4E 75 6D
	   62 65 72 3A 20
	   00

				; Third Test
				; Print equations
 000000BA 20 2B 20 00		plus	BYTE " + ", 0
 000000BE 20 2D 20 00		minus	BYTE " - ", 0
 000000C2 20 2A 20 00		multi	BYTE " * ", 0
 000000C6 20 2F 20 00		divi	BYTE " / ", 0
 000000CA 20 72 65 6D 61	remainder	BYTE " remainder ", 0
	   69 6E 64 65 72
	   20 00
 000000D6 20 3D 20 00		equal	BYTE " = ", 0

				; Fourth Test
				; Do math
 000000DA 00000000		sum		DWORD 0 ; +
 000000DE 00000000		diff	DWORD 0 ; -
 000000E2 00000000		prod	DWORD 0 ; *
 000000E6 00000000		quot 	DWORD 0 ; /
 000000EA 00000000		rem 	DWORD 0 ; remainder

				; EC 1
 000000EE 31 2E 20 59 65	yes		BYTE "1. Yes", 0
	   73 00
 000000F5 32 2E 20 4E 6F	no		BYTE "2. No", 0
	   00
 000000FB 50 72 65 73 73	play_again BYTE "Press 1 to re-calulate differnt numbers ", 0
	   20 31 20 74 6F
	   20 72 65 2D 63
	   61 6C 75 6C 61
	   74 65 20 64 69
	   66 66 65 72 6E
	   74 20 6E 75 6D
	   62 65 72 73 20
	   00
 00000124 6F 72 20 61 6E	play_again_cont BYTE "or any button to continue...", 0
	   79 20 62 75 74
	   74 6F 6E 20 74
	   6F 20 63 6F 6E
	   74 69 6E 75 65
	   2E 2E 2E 00
 00000141 00000000		play_choice	DWORD ?
 00000145 2A 2A 45 43 31	EC1		BYTE "**EC1: Program repeats until user wants to quit.", 0
	   3A 20 50 72 6F
	   67 72 61 6D 20
	   72 65 70 65 61
	   74 73 20 75 6E
	   74 69 6C 20 75
	   73 65 72 20 77
	   61 6E 74 73 20
	   74 6F 20 71 75
	   69 74 2E 00

				; EC 2
 00000176 2A 2A 45 43 32	EC2 	BYTE "**EC2: Input Validation.", 0
	   3A 20 49 6E 70
	   75 74 20 56 61
	   6C 69 64 61 74
	   69 6F 6E 2E 00
 0000018F 54 68 65 20 73	EC2_lessThan BYTE "The second number must be less than the first!", 0
	   65 63 6F 6E 64
	   20 6E 75 6D 62
	   65 72 20 6D 75
	   73 74 20 62 65
	   20 6C 65 73 73
	   20 74 68 61 6E
	   20 74 68 65 20
	   66 69 72 73 74
	   21 00
 000001BE 59 6F 75 20 63	EC2_divByZero BYTE "You can't divide by 0, are you crazy?!", 0
	   61 6E 27 74 20
	   64 69 76 69 64
	   65 20 62 79 20
	   30 2C 20 61 72
	   65 20 79 6F 75
	   20 63 72 61 7A
	   79 3F 21 00

 00000000			.code
 00000000			main PROC

				; 1.Introduce program
 00000000			intro:
 00000000  BA 00000000 R		mov		edx, OFFSET prog_name
 00000005  E8 00000000 E		call	WriteString

				; 1. Introduce author
 0000000A  BA 00000017 R		mov 	edx, OFFSET whoBy
 0000000F  E8 00000000 E		call 	WriteString
 00000014  E8 00000000 E		call 	CrLf
					
 00000019  BA 00000145 R		mov		edx, OFFSET EC1
 0000001E  E8 00000000 E		call	WriteString
 00000023  E8 00000000 E		call 	CrLf
 00000028  BA 00000176 R		mov		edx, OFFSET EC2
 0000002D  E8 00000000 E		call	WriteString
 00000032  E8 00000000 E		call 	CrLf

 00000037  E8 00000000 E		call	CrLf
					
 0000003C			instructions:
				; 2. Tell user what to do
 0000003C  BA 00000038 R		mov 	edx, OFFSET prompt_1
 00000041  E8 00000000 E		call 	WriteString
 00000046  BA 0000005C R		mov		edx, OFFSET prompt_1_cont
 0000004B  E8 00000000 E		call	WriteString
 00000050  E8 00000000 E		call 	CrLf

 00000055			input:
				; 2. Get First Number
 00000055  BA 0000009B R		mov 	edx, OFFSET first
 0000005A  E8 00000000 E		call 	WriteString
 0000005F  E8 00000000 E		call	ReadInt
 00000064  A3 00000093 R		mov		firstNum, eax
					
				; 2. Get Second Number
 00000069  BA 000000AA R		mov 	edx, OFFSET second
 0000006E  E8 00000000 E		call	WriteString
 00000073  E8 00000000 E		call	ReadInt
					;mov		secondNum, eax
					
				; EC 2. Input Validation
 00000078			inputValidation:
					; check if secondNum is larger than firstNum
 00000078  3B 05 00000093 R		cmp		eax, firstNum
 0000007E  7F 0C			jg		secondIsGreater
 00000080  83 F8 00			cmp		eax, 0
 00000083  74 1B			je		divByZero
 00000085  A3 00000097 R		mov		secondNum, eax
 0000008A  EB 28			jmp 	math
					
 0000008C			secondIsGreater:
 0000008C  BA 0000018F R		mov		edx, OFFSET EC2_lessThan
 00000091  E8 00000000 E		call 	WriteString
 00000096  E8 00000000 E		call	CrLf
 0000009B  E9 00000154			jmp		redo
					
 000000A0			divByZero:
 000000A0  BA 000001BE R		mov		edx, OFFSET EC2_divByZero
 000000A5  E8 00000000 E		call 	WriteString
 000000AA  E8 00000000 E		call	CrLf
 000000AF  E9 00000140			jmp		redo

 000000B4			math:
				; 4. Calculations
					; add
 000000B4  A1 00000093 R		mov		eax, firstNum
 000000B9  03 05 00000097 R		add		eax, secondNum
 000000BF  A3 000000DA R		mov		sum, eax
					
					; sub
 000000C4  A1 00000093 R		mov		eax, firstNum
 000000C9  2B 05 00000097 R		sub		eax, secondNum
 000000CF  A3 000000DE R		mov		diff, eax
					
					; multi
 000000D4  A1 00000093 R		mov		eax, firstNum
 000000D9  8B 1D 00000097 R		mov		ebx, secondNum
 000000DF  F7 E3			mul		ebx
 000000E1  A3 000000E2 R		mov		prod, eax
					
					; div
 000000E6  8B 15 000000EA R		mov		edx, rem
 000000EC  A1 00000093 R		mov		eax, firstNum
 000000F1  8B 1D 00000097 R		mov		ebx, secondNum
 000000F7  F7 F3			div 	ebx
 000000F9  A3 000000E6 R		mov 	quot, eax
 000000FE  89 15 000000EA R		mov 	rem, edx
					
				; 2. Print user input
				; 3. Print
 00000104			print:
					;mov 	edx, OFFSET firstTest
					;call	WriteString
					
					; +
 00000104  A1 00000093 R		mov		eax, firstNum
 00000109  E8 00000000 E		call	WriteDec
 0000010E  BA 000000BA R		mov		edx, OFFSET plus
 00000113  E8 00000000 E		call 	WriteString
					;call	CrLf	
					;mov		edx, OFFSET secondTest
					;call 	WriteString
 00000118  A1 00000097 R		mov		eax, secondNum
 0000011D  E8 00000000 E		call	WriteDec
 00000122  BA 000000D6 R		mov		edx, OFFSET equal
 00000127  E8 00000000 E		call	WriteString
 0000012C  A1 000000DA R		mov		eax, sum
 00000131  E8 00000000 E		call	WriteDec
 00000136  E8 00000000 E		call 	CrLf
					
					; -
 0000013B  A1 00000093 R		mov		eax, firstNum
 00000140  E8 00000000 E		call	WriteDec
 00000145  BA 000000BE R		mov		edx, OFFSET minus
 0000014A  E8 00000000 E		call 	WriteString
 0000014F  A1 00000097 R		mov		eax, secondNum
 00000154  E8 00000000 E		call	WriteDec
 00000159  BA 000000D6 R		mov		edx, OFFSET equal
 0000015E  E8 00000000 E		call	WriteString
 00000163  A1 000000DE R		mov		eax, diff
 00000168  E8 00000000 E		call	WriteDec
 0000016D  E8 00000000 E		call 	CrLf

					; *
 00000172  A1 00000093 R		mov		eax, firstNum
 00000177  E8 00000000 E		call	WriteDec
 0000017C  BA 000000C2 R		mov		edx, OFFSET multi
 00000181  E8 00000000 E		call 	WriteString
 00000186  A1 00000097 R		mov		eax, secondNum
 0000018B  E8 00000000 E		call	WriteDec
 00000190  BA 000000D6 R		mov		edx, OFFSET equal
 00000195  E8 00000000 E		call	WriteString
 0000019A  A1 000000E2 R		mov		eax, prod
 0000019F  E8 00000000 E		call	WriteDec
 000001A4  E8 00000000 E		call 	CrLf

					; /
 000001A9  A1 00000093 R		mov		eax, firstNum
 000001AE  E8 00000000 E		call	WriteDec
 000001B3  BA 000000C6 R		mov		edx, OFFSET divi
 000001B8  E8 00000000 E		call 	WriteString
 000001BD  A1 00000097 R		mov		eax, secondNum
 000001C2  E8 00000000 E		call	WriteDec
 000001C7  BA 000000D6 R		mov		edx, OFFSET equal
 000001CC  E8 00000000 E		call	WriteString
 000001D1  A1 000000E6 R		mov		eax, quot
 000001D6  E8 00000000 E		call	WriteDec
 000001DB  BA 000000CA R		mov		edx, OFFSET remainder
 000001E0  E8 00000000 E		call 	WriteString
 000001E5  A1 000000EA R		mov		eax, rem
 000001EA  E8 00000000 E		call 	WriteDec
 000001EF  E8 00000000 E		call 	CrLf	

				; EC 1 Loop until user wants to quit
 000001F4			redo:
 000001F4  BA 000000FB R		mov 	edx, OFFSET play_again
 000001F9  E8 00000000 E		call 	WriteString
 000001FE  BA 00000124 R		mov 	edx, OFFSET play_again_cont
 00000203  E8 00000000 E		call 	WriteString
 00000208  E8 00000000 E		call	CrLf
 0000020D  E8 00000000 E		call	ReadInt
 00000212  A3 00000141 R		mov		play_choice, eax
 00000217  83 F8 01			cmp		eax, 1
 0000021A  74 02			je		again
 0000021C  EB 28			jmp		bye

 0000021E			again:
					; clear memory
 0000021E  B8 00000000			mov 	eax, 0h
 00000223  BB 00000000			mov 	ebx, 0h
 00000228  BA 00000000			mov		edx, 0h
 0000022D  C7 05 000000E6 R		mov		quot, 0h
	   00000000
 00000237  C7 05 000000EA R		mov		rem, 0h
	   00000000
 00000241  E8 FFFFFDF6			call	instructions
					
 00000246			bye:	
				; 1. Before exiting program say bye
 00000246  BA 00000028 R		mov 	edx, OFFSET goodBye
 0000024B  E8 00000000 E		call	WriteString
 00000250  E8 00000000 E		call	CrLf
					
					exit	; exit to operating system
 00000255  6A 00	   *	    push   +000000000h
 00000257  E8 00000000 E   *	    call   ExitProcess
 0000025C			main ENDP

				; (insert additional procedures here)

				END main
Microsoft (R) Macro Assembler Version 14.10.25017.0	    01/20/18 16:41:06
/Elementary Arithmatic     (ElementaryArith.asm		     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000001E5 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000025C Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000025C Public STDCALL
  intro  . . . . . . . . . . . .	L Near	 00000000 _TEXT	
  instructions . . . . . . . . .	L Near	 0000003C _TEXT	
  input  . . . . . . . . . . . .	L Near	 00000055 _TEXT	
  inputValidation  . . . . . . .	L Near	 00000078 _TEXT	
  secondIsGreater  . . . . . . .	L Near	 0000008C _TEXT	
  divByZero  . . . . . . . . . .	L Near	 000000A0 _TEXT	
  math . . . . . . . . . . . . .	L Near	 000000B4 _TEXT	
  print  . . . . . . . . . . . .	L Near	 00000104 _TEXT	
  redo . . . . . . . . . . . . .	L Near	 000001F4 _TEXT	
  again  . . . . . . . . . . . .	L Near	 0000021E _TEXT	
  bye  . . . . . . . . . . . . .	L Near	 00000246 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
EC1  . . . . . . . . . . . . . .	Byte	 00000145 _DATA	
EC2_divByZero  . . . . . . . . .	Byte	 000001BE _DATA	
EC2_lessThan . . . . . . . . . .	Byte	 0000018F _DATA	
EC2  . . . . . . . . . . . . . .	Byte	 00000176 _DATA	
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
cyan . . . . . . . . . . . . . .	Number	 00000003h   
diff . . . . . . . . . . . . . .	DWord	 000000DE _DATA	
divi . . . . . . . . . . . . . .	Byte	 000000C6 _DATA	
equal  . . . . . . . . . . . . .	Byte	 000000D6 _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
firstNum . . . . . . . . . . . .	DWord	 00000093 _DATA	
first  . . . . . . . . . . . . .	Byte	 0000009B _DATA	
goodBye  . . . . . . . . . . . .	Byte	 00000028 _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
minus  . . . . . . . . . . . . .	Byte	 000000BE _DATA	
multi  . . . . . . . . . . . . .	Byte	 000000C2 _DATA	
no . . . . . . . . . . . . . . .	Byte	 000000F5 _DATA	
play_again_cont  . . . . . . . .	Byte	 00000124 _DATA	
play_again . . . . . . . . . . .	Byte	 000000FB _DATA	
play_choice  . . . . . . . . . .	DWord	 00000141 _DATA	
plus . . . . . . . . . . . . . .	Byte	 000000BA _DATA	
prod . . . . . . . . . . . . . .	DWord	 000000E2 _DATA	
prog_name  . . . . . . . . . . .	Byte	 00000000 _DATA	
prompt_1_cont  . . . . . . . . .	Byte	 0000005C _DATA	
prompt_1 . . . . . . . . . . . .	Byte	 00000038 _DATA	
quot . . . . . . . . . . . . . .	DWord	 000000E6 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
remainder  . . . . . . . . . . .	Byte	 000000CA _DATA	
rem  . . . . . . . . . . . . . .	DWord	 000000EA _DATA	
secondNum  . . . . . . . . . . .	DWord	 00000097 _DATA	
second . . . . . . . . . . . . .	Byte	 000000AA _DATA	
sum  . . . . . . . . . . . . . .	DWord	 000000DA _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
whoBy  . . . . . . . . . . . . .	Byte	 00000017 _DATA	
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   
yes  . . . . . . . . . . . . . .	Byte	 000000EE _DATA	

	   0 Warnings
	   0 Errors
